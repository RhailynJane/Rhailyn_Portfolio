{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/professional-portfolio/app/api/admin/login/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const body = await req.json()\r\n    const username = (body.username || \"\").trim()\r\n    const password = (body.password || \"\").trim()\r\n\r\n    const expectedUser = (process.env.ADMIN_USER || \"\").trim()\r\n    const expectedPass = (process.env.ADMIN_PASSWORD || \"\").trim()\r\n\r\n    if (username !== expectedUser || password !== expectedPass) {\r\n      return NextResponse.json({ success: false, error: \"Invalid credentials\" }, { status: 401 })\r\n    }\r\n\r\n    const secret = (process.env.ADMIN_SECRET || \"default-secret\").trim()\r\n    const enc = new TextEncoder()\r\n    const data = enc.encode(`${expectedUser}:${expectedPass}:${secret}`)\r\n    const digest = await crypto.subtle.digest(\"SHA-256\", data)\r\n    const token = Array.from(new Uint8Array(digest)).map((b) => b.toString(16).padStart(2, \"0\")).join(\"\")\r\n\r\n    const res = NextResponse.redirect(new URL(\"/admin\", req.url))\r\n    res.cookies.set(\"admin_session\", token, {\r\n      httpOnly: true,\r\n      sameSite: \"lax\",\r\n      path: \"/\",\r\n      secure: process.env.NODE_ENV === \"production\",\r\n      maxAge: 60 * 60 * 8, // 8 hours\r\n    })\r\n    return res\r\n  } catch (e) {\r\n    return NextResponse.json({ success: false, error: \"Bad request\" }, { status: 400 })\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,WAAW,CAAC,KAAK,QAAQ,IAAI,EAAE,EAAE,IAAI;QAC3C,MAAM,WAAW,CAAC,KAAK,QAAQ,IAAI,EAAE,EAAE,IAAI;QAE3C,MAAM,eAAe,CAAC,QAAQ,GAAG,CAAC,UAAU,IAAI,EAAE,EAAE,IAAI;QACxD,MAAM,eAAe,CAAC,QAAQ,GAAG,CAAC,cAAc,IAAI,EAAE,EAAE,IAAI;QAE5D,IAAI,aAAa,gBAAgB,aAAa,cAAc;YAC1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC3F;QAEA,MAAM,SAAS,CAAC,QAAQ,GAAG,CAAC,YAAY,IAAI,gBAAgB,EAAE,IAAI;QAClE,MAAM,MAAM,IAAI;QAChB,MAAM,OAAO,IAAI,MAAM,CAAC,GAAG,aAAa,CAAC,EAAE,aAAa,CAAC,EAAE,QAAQ;QACnE,MAAM,SAAS,MAAM,OAAO,MAAM,CAAC,MAAM,CAAC,WAAW;QACrD,MAAM,QAAQ,MAAM,IAAI,CAAC,IAAI,WAAW,SAAS,GAAG,CAAC,CAAC,IAAM,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,MAAM,IAAI,CAAC;QAElG,MAAM,MAAM,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;QAC3D,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,OAAO;YACtC,UAAU;YACV,UAAU;YACV,MAAM;YACN,QAAQ,oDAAyB;YACjC,QAAQ,KAAK,KAAK;QACpB;QACA,OAAO;IACT,EAAE,OAAO,GAAG;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO;QAAc,GAAG;YAAE,QAAQ;QAAI;IACnF;AACF","debugId":null}}]
}