{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/professional-portfolio/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\"\r\n\r\nconst globalForPrisma = globalThis as unknown as { prisma: PrismaClient | undefined }\r\n\r\nexport const prisma =\r\n  globalForPrisma.prisma ??\r\n  new PrismaClient({\r\n    log: [\"error\", \"warn\"],\r\n  })\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KAAK;QAAC;QAAS;KAAO;AACxB;AAEF,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/professional-portfolio/lib/validation.ts"],"sourcesContent":["// Lightweight input validation helpers to reduce risk of injection and invalid data\r\n\r\nexport const UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i\r\n\r\nexport function isUUID(v: unknown): v is string {\r\n  return typeof v === \"string\" && UUID_REGEX.test(v)\r\n}\r\n\r\nexport function sanitizeString(v: unknown, maxLen = 256): string {\r\n  if (typeof v !== \"string\") return \"\"\r\n  const s = v.trim()\r\n  return s.length > maxLen ? s.slice(0, maxLen) : s\r\n}\r\n\r\nexport function isEmail(v: unknown): v is string {\r\n  if (typeof v !== \"string\") return false\r\n  const s = v.trim()\r\n  if (s.length === 0 || s.length > 254) return false\r\n  // RFC 5322 simplified\r\n  return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(s)\r\n}\r\n\r\nexport function isSafeCategory(v: unknown, maxLen = 64): v is string {\r\n  if (typeof v !== \"string\") return false\r\n  const s = v.trim()\r\n  if (s.length === 0 || s.length > maxLen) return false\r\n  // allow letters, numbers, spaces, dashes, underscores, slashes\r\n  return /^[A-Za-z0-9 _\\-/]+$/.test(s)\r\n}\r\n\r\nexport function clampNumber(n: unknown, min: number, max: number, fallback: number): number {\r\n  const num = typeof n === \"number\" ? n : Number(n)\r\n  if (Number.isNaN(num)) return fallback\r\n  return Math.min(max, Math.max(min, num))\r\n}\r\n"],"names":[],"mappings":"AAAA,oFAAoF;;;;;;;;;AAE7E,MAAM,aAAa;AAEnB,SAAS,OAAO,CAAU;IAC/B,OAAO,OAAO,MAAM,YAAY,WAAW,IAAI,CAAC;AAClD;AAEO,SAAS,eAAe,CAAU,EAAE,SAAS,GAAG;IACrD,IAAI,OAAO,MAAM,UAAU,OAAO;IAClC,MAAM,IAAI,EAAE,IAAI;IAChB,OAAO,EAAE,MAAM,GAAG,SAAS,EAAE,KAAK,CAAC,GAAG,UAAU;AAClD;AAEO,SAAS,QAAQ,CAAU;IAChC,IAAI,OAAO,MAAM,UAAU,OAAO;IAClC,MAAM,IAAI,EAAE,IAAI;IAChB,IAAI,EAAE,MAAM,KAAK,KAAK,EAAE,MAAM,GAAG,KAAK,OAAO;IAC7C,sBAAsB;IACtB,OAAO,6BAA6B,IAAI,CAAC;AAC3C;AAEO,SAAS,eAAe,CAAU,EAAE,SAAS,EAAE;IACpD,IAAI,OAAO,MAAM,UAAU,OAAO;IAClC,MAAM,IAAI,EAAE,IAAI;IAChB,IAAI,EAAE,MAAM,KAAK,KAAK,EAAE,MAAM,GAAG,QAAQ,OAAO;IAChD,+DAA+D;IAC/D,OAAO,sBAAsB,IAAI,CAAC;AACpC;AAEO,SAAS,YAAY,CAAU,EAAE,GAAW,EAAE,GAAW,EAAE,QAAgB;IAChF,MAAM,MAAM,OAAO,MAAM,WAAW,IAAI,OAAO;IAC/C,IAAI,OAAO,KAAK,CAAC,MAAM,OAAO;IAC9B,OAAO,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK;AACrC","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///C:/professional-portfolio/app/api/projects/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\r\nimport { prisma } from \"@/lib/prisma\"\r\nimport { isUUID, isSafeCategory } from \"@/lib/validation\"\r\n\r\nexport async function GET(request: Request) {\r\n  try {\r\n    const { searchParams } = new URL(request.url)\r\n  const id = searchParams.get(\"id\")\r\n  const category = searchParams.get(\"category\")\r\n    const featured = searchParams.get(\"featured\")\r\n\r\n    let projects\r\n\r\n    if (id) {\r\n      if (!isUUID(id)) {\r\n        return NextResponse.json({ error: \"Invalid id\" }, { status: 400 })\r\n      }\r\n      const project = await prisma.project.findUnique({\r\n        where: { id },\r\n      })\r\n      if (!project) {\r\n        return NextResponse.json({ error: \"Project not found\" }, { status: 404 })\r\n      }\r\n      return NextResponse.json({\r\n        id: project.id,\r\n        title: project.title,\r\n        description: project.description,\r\n        long_description: project.longDescription || undefined,\r\n        technologies: project.technologies,\r\n        category: project.category,\r\n        github_url: project.githubUrl,\r\n        demo_url: project.demoUrl,\r\n        video_url: project.videoUrl,\r\n        image_url: project.imageUrl,\r\n        figma_url: project.figmaUrl,\r\n        featured: project.featured,\r\n        created_at: project.createdAt.toISOString(),\r\n        updated_at: project.updatedAt.toISOString(),\r\n        role: project.role || undefined,\r\n        team: project.team || undefined,\r\n        duration: project.duration || undefined,\r\n        timeline: project.timeline || undefined,\r\n  features: project.features || undefined,\r\n      })\r\n    }\r\n\r\n    if (category) {\r\n      if (!isSafeCategory(category)) {\r\n        return NextResponse.json({ error: \"Invalid category\" }, { status: 400 })\r\n      }\r\n      projects = await prisma.project.findMany({\r\n        where: { category },\r\n        orderBy: { createdAt: \"desc\" },\r\n      })\r\n    } else if (featured === \"true\") {\r\n      projects = await prisma.project.findMany({\r\n        where: { featured: true },\r\n        orderBy: { createdAt: \"desc\" },\r\n      })\r\n    } else {\r\n      projects = await prisma.project.findMany({\r\n        orderBy: { createdAt: \"desc\" },\r\n      })\r\n    }\r\n\r\n    const formattedProjects = projects.map((p: any) => ({\r\n      id: p.id,\r\n      title: p.title,\r\n      description: p.description,\r\n      long_description: p.longDescription || undefined,\r\n      technologies: p.technologies,\r\n      category: p.category,\r\n      github_url: p.githubUrl,\r\n      demo_url: p.demoUrl,\r\n      video_url: p.videoUrl,\r\n      image_url: p.imageUrl,\r\n      figma_url: p.figmaUrl,\r\n      featured: p.featured,\r\n      created_at: p.createdAt.toISOString(),\r\n      updated_at: p.updatedAt.toISOString(),\r\n      role: p.role || undefined,\r\n      team: p.team || undefined,\r\n      duration: p.duration || undefined,\r\n      timeline: p.timeline || undefined,\r\n  features: p.features || undefined,\r\n    }))\r\n\r\n    return NextResponse.json(formattedProjects)\r\n  } catch (error) {\r\n    console.error(\"Error fetching projects:\", error)\r\n    return NextResponse.json({ error: \"Failed to fetch projects\" }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}