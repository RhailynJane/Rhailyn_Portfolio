{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\"\r\n\r\n// Routes to protect with HTTP Basic Auth\r\nconst protectedMatchers = [/^\\/admin(\\/.*)?$/, /^\\/api\\/feedback\\/moderation(\\/.*)?$/]\r\n\r\nfunction unauthorized() {\r\n  return new NextResponse(\"Unauthorized\", {\r\n    status: 401,\r\n    headers: { \"WWW-Authenticate\": 'Basic realm=\"Restricted\"' },\r\n  })\r\n}\r\n\r\n// Timing-safe string compare that works in the middleware (Edge) runtime\r\nfunction safeEqual(a: string, b: string) {\r\n  const enc = new TextEncoder()\r\n  const aBytes = enc.encode(a)\r\n  const bBytes = enc.encode(b)\r\n  const len = Math.max(aBytes.length, bBytes.length)\r\n  let result = 0\r\n  for (let i = 0; i < len; i++) {\r\n    const x = aBytes[i] ?? 0\r\n    const y = bBytes[i] ?? 0\r\n    result |= x ^ y\r\n  }\r\n  return result === 0 && aBytes.length === bBytes.length\r\n}\r\n\r\nexport function middleware(req: NextRequest) {\r\n  const { pathname } = req.nextUrl\r\n  const needsAuth = protectedMatchers.some((rx) => rx.test(pathname))\r\n  if (!needsAuth) return NextResponse.next()\r\n\r\n  const header = req.headers.get(\"authorization\") || \"\"\r\n  if (!header.startsWith(\"Basic \")) return unauthorized()\r\n\r\n  try {\r\n    const decoded = Buffer.from(header.replace(\"Basic \", \"\"), \"base64\").toString()\r\n    const [user, pass] = decoded.split(\":\")\r\n\r\n    // Normalize env values to avoid accidental trailing whitespace/newlines\r\n    const expectedUser = (process.env.ADMIN_USER || \"\").trim()\r\n    const expectedPass = (process.env.ADMIN_PASSWORD || \"\").trim()\r\n\r\n    if (!safeEqual(user || \"\", expectedUser) || !safeEqual(pass || \"\", expectedPass)) {\r\n      return unauthorized()\r\n    }\r\n\r\n    return NextResponse.next()\r\n  } catch {\r\n    return unauthorized()\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\"/admin/:path*\", \"/api/feedback/moderation/:path*\"],\r\n}\r\n"],"names":[],"mappings":";;;;AAoCoB;AApCpB;AAAA;;AAEA,yCAAyC;AACzC,MAAM,oBAAoB;IAAC;IAAoB;CAAuC;AAEtF,SAAS;IACP,OAAO,IAAI,6LAAA,CAAA,eAAY,CAAC,gBAAgB;QACtC,QAAQ;QACR,SAAS;YAAE,oBAAoB;QAA2B;IAC5D;AACF;AAEA,yEAAyE;AACzE,SAAS,UAAU,CAAS,EAAE,CAAS;IACrC,MAAM,MAAM,IAAI;IAChB,MAAM,SAAS,IAAI,MAAM,CAAC;IAC1B,MAAM,SAAS,IAAI,MAAM,CAAC;IAC1B,MAAM,MAAM,KAAK,GAAG,CAAC,OAAO,MAAM,EAAE,OAAO,MAAM;IACjD,IAAI,SAAS;IACb,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;QAC5B,MAAM,IAAI,MAAM,CAAC,EAAE,IAAI;QACvB,MAAM,IAAI,MAAM,CAAC,EAAE,IAAI;QACvB,UAAU,IAAI;IAChB;IACA,OAAO,WAAW,KAAK,OAAO,MAAM,KAAK,OAAO,MAAM;AACxD;AAEO,SAAS,WAAW,GAAgB;IACzC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;IAChC,MAAM,YAAY,kBAAkB,IAAI,CAAC,CAAC,KAAO,GAAG,IAAI,CAAC;IACzD,IAAI,CAAC,WAAW,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAExC,MAAM,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB;IACnD,IAAI,CAAC,OAAO,UAAU,CAAC,WAAW,OAAO;IAEzC,IAAI;QACF,MAAM,UAAU,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,OAAO,OAAO,CAAC,UAAU,KAAK,UAAU,QAAQ;QAC5E,MAAM,CAAC,MAAM,KAAK,GAAG,QAAQ,KAAK,CAAC;QAEnC,wEAAwE;QACxE,MAAM,eAAe,CAAC,QAAQ,GAAG,CAAC,UAAU,IAAI,EAAE,EAAE,IAAI;QACxD,MAAM,eAAe,CAAC,QAAQ,GAAG,CAAC,cAAc,IAAI,EAAE,EAAE,IAAI;QAE5D,IAAI,CAAC,UAAU,QAAQ,IAAI,iBAAiB,CAAC,UAAU,QAAQ,IAAI,eAAe;YAChF,OAAO;QACT;QAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAiB;KAAkC;AAC/D"}}]
}