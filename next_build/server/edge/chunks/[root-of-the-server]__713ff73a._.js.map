{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/ (unsupported edge import crypto)"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`crypto`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\"\r\nimport crypto from \"crypto\"\r\n\r\n// Routes to protect with HTTP Basic Auth\r\nconst protectedMatchers = [/^\\/admin(\\/.*)?$/, /^\\/api\\/feedback\\/moderation(\\/.*)?$/]\r\n\r\nfunction unauthorized() {\r\n  return new NextResponse(\"Unauthorized\", {\r\n    status: 401,\r\n    headers: { \"WWW-Authenticate\": 'Basic realm=\"Restricted\"' },\r\n  })\r\n}\r\n\r\nfunction safeEqual(a: string, b: string) {\r\n  const aBuf = Buffer.from(a)\r\n  const bBuf = Buffer.from(b)\r\n  if (aBuf.length !== bBuf.length) {\r\n    // Prevent length leak by comparing buffers of equal length\r\n    const padA = Buffer.concat([aBuf, Buffer.alloc(Math.max(0, bBuf.length - aBuf.length))])\r\n    const padB = Buffer.concat([bBuf, Buffer.alloc(Math.max(0, aBuf.length - bBuf.length))])\r\n    return crypto.timingSafeEqual(padA, padB) && a === b\r\n  }\r\n  return crypto.timingSafeEqual(aBuf, bBuf)\r\n}\r\n\r\nexport function middleware(req: NextRequest) {\r\n  const { pathname } = req.nextUrl\r\n  const needsAuth = protectedMatchers.some((rx) => rx.test(pathname))\r\n  if (!needsAuth) return NextResponse.next()\r\n\r\n  const header = req.headers.get(\"authorization\") || \"\"\r\n  if (!header.startsWith(\"Basic \")) return unauthorized()\r\n\r\n  try {\r\n    const decoded = Buffer.from(header.replace(\"Basic \", \"\"), \"base64\").toString()\r\n    const [user, pass] = decoded.split(\":\")\r\n\r\n    const expectedUser = process.env.ADMIN_USER || \"\"\r\n    const expectedPass = process.env.ADMIN_PASSWORD || \"\"\r\n\r\n    if (!safeEqual(user || \"\", expectedUser) || !safeEqual(pass || \"\", expectedPass)) {\r\n      return unauthorized()\r\n    }\r\n\r\n    return NextResponse.next()\r\n  } catch {\r\n    return unauthorized()\r\n  }\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\"/admin/:path*\", \"/api/feedback/moderation/:path*\"],\r\n}\r\n"],"names":[],"mappings":";;;;AAce;AAdf;AAAA;AACA;;;AAEA,yCAAyC;AACzC,MAAM,oBAAoB;IAAC;IAAoB;CAAuC;AAEtF,SAAS;IACP,OAAO,IAAI,6LAAA,CAAA,eAAY,CAAC,gBAAgB;QACtC,QAAQ;QACR,SAAS;YAAE,oBAAoB;QAA2B;IAC5D;AACF;AAEA,SAAS,UAAU,CAAS,EAAE,CAAS;IACrC,MAAM,OAAO,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC;IACzB,MAAM,OAAO,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC;IACzB,IAAI,KAAK,MAAM,KAAK,KAAK,MAAM,EAAE;QAC/B,2DAA2D;QAC3D,MAAM,OAAO,qHAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAC;YAAM,qHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM;SAAG;QACvF,MAAM,OAAO,qHAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAC;YAAM,qHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,MAAM;SAAG;QACvF,OAAO,yIAAA,CAAA,UAAM,CAAC,eAAe,CAAC,MAAM,SAAS,MAAM;IACrD;IACA,OAAO,yIAAA,CAAA,UAAM,CAAC,eAAe,CAAC,MAAM;AACtC;AAEO,SAAS,WAAW,GAAgB;IACzC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;IAChC,MAAM,YAAY,kBAAkB,IAAI,CAAC,CAAC,KAAO,GAAG,IAAI,CAAC;IACzD,IAAI,CAAC,WAAW,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAExC,MAAM,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB;IACnD,IAAI,CAAC,OAAO,UAAU,CAAC,WAAW,OAAO;IAEzC,IAAI;QACF,MAAM,UAAU,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,OAAO,OAAO,CAAC,UAAU,KAAK,UAAU,QAAQ;QAC5E,MAAM,CAAC,MAAM,KAAK,GAAG,QAAQ,KAAK,CAAC;QAEnC,MAAM,eAAe,QAAQ,GAAG,CAAC,UAAU,IAAI;QAC/C,MAAM,eAAe,QAAQ,GAAG,CAAC,cAAc,IAAI;QAEnD,IAAI,CAAC,UAAU,QAAQ,IAAI,iBAAiB,CAAC,UAAU,QAAQ,IAAI,eAAe;YAChF,OAAO;QACT;QAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAiB;KAAkC;AAC/D"}}]
}